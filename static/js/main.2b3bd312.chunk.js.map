{"version":3,"sources":["utils.js","SingleColor.js","ColorPage.js","App.js","index.js"],"names":["rgbToHex","SingleColor","rgb","weight","index","hexColor","useState","alert","setAlert","bcg","join","hexValue","useEffect","timeOut","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","ColorPage","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","console","log","type","value","onChange","target","placeholder","map","hex","App","ReactDOM","render","document","getElementById"],"mappings":"iNASeA,ICoBAC,EA1BK,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAAc,EAE5BC,oBAAS,GAFmB,mBAE/CC,EAF+C,KAExCC,EAFwC,KAGhDC,EAAMP,EAAIQ,KAAK,KACfC,EAAQ,WAAON,GASrB,OAPAO,qBAAU,WACR,IAAMC,EAAUC,YAAW,WACzBN,GAAS,KACT,KACF,OAAO,kBAAMO,aAAaF,MACzB,CAACN,IAGF,0BAASS,UAAS,gBAAWZ,EAAM,IAAM,eAAiBa,MAAO,CAACC,gBAAgB,OAAD,OAAQT,EAAR,MACjFU,QAAS,WACPX,GAAS,GACTY,UAAUC,UAAUC,UAAUX,IAHhC,UAKE,oBAAGK,UAAU,gBAAb,UAA8Bb,EAA9B,OACA,mBAAGa,UAAU,cAAb,SAA4BL,IAC3BJ,GAAS,mBAAGS,UAAU,QAAb,uCCuBDO,EA1CG,WAAO,IAAD,EAEMjB,mBAAS,IAFf,mBAEbkB,EAFa,KAENC,EAFM,OAGMnB,oBAAS,GAHf,mBAGboB,EAHa,KAGNC,EAHM,OAIIrB,mBAAS,IAAIsB,IAAO,WAAWC,IAAI,KAJvC,mBAIbC,EAJa,KAIPC,EAJO,KAsBpB,OACI,qCACI,0BAASf,UAAU,YAAnB,UACI,iDACA,uBAAMgB,SAnBG,SAACC,GAClBA,EAAEC,iBACF,IACI,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,IACnCE,EAAQI,GAERR,GAAS,GACZ,MAAMD,GACHC,GAAS,GACTS,QAAQC,IAAIX,KAUR,UACI,uBAAOY,KAAK,OAAOC,MAAOf,EAAOgB,SAAU,SAACP,GAAD,OAAOR,EAASQ,EAAEQ,OAAOF,QAAQG,YAAY,UACxF1B,UAAS,UAAKU,EAAO,QAAQ,QAC7B,wBAAQV,UAAU,MAAMsB,KAAK,SAA7B,0BAGR,yBAAStB,UAAU,SAAnB,SACKc,EAAKa,KAAI,SAACnB,EAAOpB,GACd,OAAO,cAAC,EAAD,2BAA6BoB,GAA7B,IAAoCpB,MAAOA,EAAOC,SAAUmB,EAAMoB,MAAhDxC,YC9B9ByC,EANJ,WACT,OACE,cAAC,EAAD,KCAJC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2b3bd312.chunk.js","sourcesContent":["function componentToHex(c){\r\n    var hex = c.toString(16);\r\n    return hex.length == 1 ? '0' + hex : hex;\r\n}\r\n\r\nfunction rgbToHex(r,g,b){\r\n    return '#' + componentToHex(r) + componentToHex(g) + componentToHex(b)\r\n}\r\n\r\nexport default rgbToHex;","import React, { useState, useEffect } from 'react'\r\nimport rgbToHex from './utils'\r\n\r\nconst SingleColor = ({rgb, weight, index, hexColor}) => {\r\n\r\n  const [alert, setAlert] = useState(false)\r\n  const bcg = rgb.join(',');\r\n  const hexValue = `#${hexColor}`\r\n\r\n  useEffect(() =>{\r\n    const timeOut = setTimeout(() => {\r\n      setAlert(false);\r\n    },2000)\r\n    return () => clearTimeout(timeOut)\r\n  }, [alert])\r\n\r\n  return (\r\n    <article className={`color ${index>10 && 'color-light'}`} style={{backgroundColor:`rgb(${bcg})` }} \r\n    onClick={() => {\r\n      setAlert(true)\r\n      navigator.clipboard.writeText(hexValue)\r\n    }}>\r\n      <p className=\"percent-value\">{weight}%</p>\r\n      <p className=\"color-value\">{hexValue}</p>\r\n      {alert && <p className=\"alert\"> Copied to clipboard!</p>}\r\n    </article>\r\n    )\r\n}\r\n\r\nexport default SingleColor\r\n","import React, {useState} from 'react'\r\nimport Values from 'values.js'\r\nimport SingleColor from './SingleColor'\r\n\r\n\r\nconst ColorPage = () => {\r\n \r\n    const [color, setColor] = useState('');\r\n    const [error, setError] = useState(false)\r\n    const [list, setList] = useState(new Values('#fababa').all(10))\r\n\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        try{\r\n            let colors = new Values(color).all(10)\r\n            setList(colors)\r\n\r\n            setError(false)\r\n        }catch(error){\r\n            setError(true)\r\n            console.log(error);\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className=\"container\">\r\n                <h3>Color generator</h3>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={color} onChange={(e) => setColor(e.target.value)} placeholder=\"#fababa\"\r\n                    className={`${error ?'error':null}`}></input>\r\n                    <button className=\"btn\" type=\"submit\">Submit</button>\r\n                </form>\r\n            </section>\r\n            <section className=\"colors\">\r\n                {list.map((color, index) =>{\r\n                    return <SingleColor key={index} {...color} index={index} hexColor={color.hex}/>\r\n                    \r\n                } )}\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ColorPage\r\n","import React from 'react'\nimport ColorPage from './ColorPage'\n\nconst App =() => {\n  return (\n    <ColorPage/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}